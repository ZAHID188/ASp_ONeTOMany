// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using relationshipAPI.Data;

#nullable disable

namespace relationshipAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220611073510_db")]
    partial class db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CharecterSkills", b =>
                {
                    b.Property<int>("CharectersId")
                        .HasColumnType("int");

                    b.Property<int>("SkillssId")
                        .HasColumnType("int");

                    b.HasKey("CharectersId", "SkillssId");

                    b.HasIndex("SkillssId");

                    b.ToTable("CharecterSkills");
                });

            modelBuilder.Entity("relationshipAPI.Model.Charecter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("rpgClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Charecters");
                });

            modelBuilder.Entity("relationshipAPI.Model.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skillls");
                });

            modelBuilder.Entity("relationshipAPI.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("relationshipAPI.Model.weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CharecterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("damage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharecterId")
                        .IsUnique();

                    b.ToTable("weapons");
                });

            modelBuilder.Entity("CharecterSkills", b =>
                {
                    b.HasOne("relationshipAPI.Model.Charecter", null)
                        .WithMany()
                        .HasForeignKey("CharectersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("relationshipAPI.Model.Skills", null)
                        .WithMany()
                        .HasForeignKey("SkillssId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("relationshipAPI.Model.Charecter", b =>
                {
                    b.HasOne("relationshipAPI.Model.User", "User")
                        .WithMany("Charecters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("relationshipAPI.Model.weapon", b =>
                {
                    b.HasOne("relationshipAPI.Model.Charecter", "Charecter")
                        .WithOne("weapon")
                        .HasForeignKey("relationshipAPI.Model.weapon", "CharecterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charecter");
                });

            modelBuilder.Entity("relationshipAPI.Model.Charecter", b =>
                {
                    b.Navigation("weapon")
                        .IsRequired();
                });

            modelBuilder.Entity("relationshipAPI.Model.User", b =>
                {
                    b.Navigation("Charecters");
                });
#pragma warning restore 612, 618
        }
    }
}
